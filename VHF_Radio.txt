@name VHF Radio
@model models/sprops/cuboids/height12/size_2/cube_24x30x12.mdl

#[
    
    VHF Radio
    Made by  Periapsis  STEAM_0:1:115301653
    
    Thanks [BM] Dolphin-Gineer for testing
    
    TX - Stands for Transmit
    RX - Stands for Receive
    
    Frequencies can range from 30 to 300 MHz
    Use the '/tx' or '/rx' command to set the frequency for Transmit / Receive channels
    Use the '/send' command to send a message
    
    How to use:
        
        When you send a message, it sends it to every radio that has their
        receive frequency (RX) set to the same value than your transmit
        frequency (TX). Same goes the other way around. If somone sends a message
        on frequency 180, everyone that receives from 180 will receive that message.
    
]#

@persist [TXFrequency, RXFrequency]

@persist [SegmentOn, SegmentOff, BoxColor]:vector
@persist [Deb]:string
@persist [DigitsPos]:vector

if(first()){
    
    # Color settings:
    
    BoxColor = vec(100, 100, 100)
    
    SegmentOn = vec(255, 150, 0)
    SegmentOff = vec(50, 50, 50)
    
    # End of Color settings
    
    Deb = "models/debug/debugwhite"
        
    # Setup the Entity
    entity():setMaterial(Deb)
    entity():setColor(vec(150, 150, 150))
    
    # Metal Box
    holoCreate(0, entity():toWorld(vec(0)), vec(1.05, 0.95, 1.1), entity():toWorld(ang(0)), BoxColor, "models/sprops/cuboids/height12/size_2/cube_24x30x12.mdl")
    holoMaterial(0, Deb)
    
    # Display
     # Background
    holoCreate(1, entity():toWorld(vec(-5, 12, 0.75)), vec(0.75, 0.75, 0.1), entity():toWorld(ang(0, 0, 90)), vec(75, 75, 75), "models/sprops/rectangles_thin/size_2/rect_12x24x1_5.mdl")
    holoMaterial(1, Deb)
     # Frame
    holoCreate(2, entity():toWorld(vec(3.5, 12, 0.75)), vec(0.75), entity():toWorld(ang(90, 0, 0)), vec(25, 25, 25), "models/sprops/rectangles_thin/size_0/rect_1_5x12x1_5.mdl")
    holoCreate(3, entity():toWorld(vec(-13.5, 12, 0.75)), vec(0.75), entity():toWorld(ang(90, 0, 0)), vec(25, 25, 25), "models/sprops/rectangles_thin/size_0/rect_1_5x12x1_5.mdl")
    holoCreate(4, entity():toWorld(vec(-5, 12, 5)), vec(0.75), entity():toWorld(ang(0)), vec(25, 25, 25), "models/sprops/rectangles_thin/size_0/rect_1_5x24x1_5.mdl")
    holoCreate(5, entity():toWorld(vec(-5, 12, -4)), vec(0.75), entity():toWorld(ang(0)), vec(25, 25, 25), "models/sprops/rectangles_thin/size_0/rect_1_5x24x1_5.mdl")
    holoMaterial(2, Deb)
    holoMaterial(3, Deb)
    holoMaterial(4, Deb)
    holoMaterial(5, Deb)
    
    # Digits
    DigitsPos = vec(-2, 0, -1.5)
     # Bottom
    holoCreate(6, entity():toWorld(vec(0, 12, 0) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(7, entity():toWorld(vec(-2, 12, 0) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(8, entity():toWorld(vec(-4, 12, 0) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(9, entity():toWorld(vec(-6.5, 12, 0) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(10, entity():toWorld(vec(-8.5, 12, 0) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
     # Top
    holoCreate(11, entity():toWorld(vec(0, 12.2, 0) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_0.mdl")
    holoCreate(12, entity():toWorld(vec(-2, 12.2, 0) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_3.mdl")
    holoCreate(13, entity():toWorld(vec(-4, 12.2, 0) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_0.mdl")
    holoCreate(14, entity():toWorld(vec(-6.5, 12.2, 0) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_0.mdl")
    holoCreate(15, entity():toWorld(vec(-8.5, 12.2, 0) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_0.mdl")
     # Bottom
    holoCreate(16, entity():toWorld(vec(0, 12, 4) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(17, entity():toWorld(vec(-2, 12, 4) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(18, entity():toWorld(vec(-4, 12, 4) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(19, entity():toWorld(vec(-6.5, 12, 4) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
    holoCreate(20, entity():toWorld(vec(-8.5, 12, 4) + DigitsPos), vec(0.25, 0.1, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_8.mdl")
     # Top
    holoCreate(21, entity():toWorld(vec(0, 12.2, 4) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOff, "models/sprops/misc/alphanum/alphanum_0.mdl")
    holoCreate(22, entity():toWorld(vec(-2, 12.2, 4) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_3.mdl")
    holoCreate(23, entity():toWorld(vec(-4, 12.2, 4) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_0.mdl")
    holoCreate(24, entity():toWorld(vec(-6.5, 12.2, 4) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_0.mdl")
    holoCreate(25, entity():toWorld(vec(-8.5, 12.2, 4) + DigitsPos), vec(0.25, 0.01, 0.25), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/misc/alphanum/alphanum_0.mdl")
     # Dots
    holoCreate(26, entity():toWorld(vec(-5.25, 12.1, -1.5) + DigitsPos), vec(0.025), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/geometry/fdisc_12.mdl")
    holoCreate(27, entity():toWorld(vec(-5.25, 12.1, 2.5) + DigitsPos), vec(0.025), entity():toWorld(ang(0, 0, 0)), SegmentOn, "models/sprops/geometry/fdisc_12.mdl")
    for(I = 6, 27){
        holoDisableShading(I, 1)
        holoMaterial(I, Deb)
        holoBodygroup(I, 0, 3)
    }
    
    # TX Indicator
    holoCreate(28, entity():toWorld(vec(3, 11.65, 0) + DigitsPos), vec(0.35), entity():toWorld(ang(0, 0, 90)), SegmentOff, "models/sprops/rectangles/size_1_5/rect_6x6x3.mdl")
    holoCreate(29, entity():toWorld(vec(3.5, 12.05, 0) + DigitsPos), vec(0.1), entity():toWorld(ang(0, 0, 0)), vec(25, 25, 25), "models/sprops/misc/alphanum/alphanum_t.mdl")
    holoCreate(30, entity():toWorld(vec(2.5, 12.05, 0) + DigitsPos), vec(0.1), entity():toWorld(ang(0, 0, 0)), vec(25, 25, 25), "models/sprops/misc/alphanum/alphanum_x.mdl")
    holoMaterial(28, Deb), holoMaterial(29, Deb), holoMaterial(30, Deb)
    holoDisableShading(28, 1)
    
    # RX Indicator
    holoCreate(31, entity():toWorld(vec(3, 11.65, 4) + DigitsPos), vec(0.35), entity():toWorld(ang(0, 0, 90)), SegmentOff, "models/sprops/rectangles/size_1_5/rect_6x6x3.mdl")
    holoCreate(32, entity():toWorld(vec(3.5, 12.05, 4) + DigitsPos), vec(0.1), entity():toWorld(ang(0, 0, 0)), vec(25, 25, 25), "models/sprops/misc/alphanum/alphanum_r.mdl")
    holoCreate(33, entity():toWorld(vec(2.5, 12.05, 4) + DigitsPos), vec(0.1), entity():toWorld(ang(0, 0, 0)), vec(25, 25, 25), "models/sprops/misc/alphanum/alphanum_x.mdl")
    holoMaterial(31, Deb), holoMaterial(32, Deb), holoMaterial(33, Deb)
    holoDisableShading(31, 1)
    
    # Antenna
    holoCreate(34, entity():toWorld(vec(-12, -12.75, 5)), vec(0.5), entity():toWorld(ang(180, 90, 0)), vec(15), "models/sprops/misc/fittings/bend_short_90_3.mdl")
    holoCreate(35, entity():toWorld(vec(-12, -13.1, 22.75)), vec(0.5), entity():toWorld(ang(180, 90, 0)), vec(75), "models/sprops/cylinders/size_1/cylinder_1_5x72.mdl")
    holoCreate(36, entity():toWorld(vec(-12, -13.1, 40.5)), vec(0.5), entity():toWorld(ang(0)), vec(75), "models/sprops/geometry/sphere_3.mdl")
    holoMaterial(34, Deb)
    holoMaterial(35, Deb)
    holoMaterial(36, Deb)
    
    # RX Wheel
    holoCreate(37, entity():toWorld(vec(13, 12, 3)), vec(0.5), entity():toWorld(ang(0, 0, 90)), vec(125), "models/sprops/cylinders/size_3/cylinder_6x3.mdl")
    holoCreate(38, entity():toWorld(vec(13, 12.5, 4.25)), vec(0.01, 0.125, 0.125), entity():toWorld(ang(0, 0, 90)), vec(10), "models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl")
    holoMaterial(37, Deb)
    holoMaterial(38, Deb)
    
    # TX Wheel
    holoCreate(39, entity():toWorld(vec(13, 12, -3)), vec(0.5), entity():toWorld(ang(0, 0, 90)), vec(125), "models/sprops/cylinders/size_3/cylinder_6x3.mdl")
    holoCreate(40, entity():toWorld(vec(13, 12.5, -1.75)), vec(0.01, 0.125, 0.125), entity():toWorld(ang(0, 0, 90)), vec(10), "models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl")
    holoMaterial(39, Deb)
    holoMaterial(40, Deb)
    
    # Parent everything
    for(I = 0, holoAmount()){
        holoParent(I, entity())
    }
    
    holoParent(38, 37)
    holoParent(40, 39)
    
    function number setTXFrequency(Freq){
        if(Freq < 30 | Freq > 300){
            printColor(vec(255, 150, 0), "[VHF]", vec(255), " - Frequency is out of range!")
            return TXFrequency
        }
        Freq = clamp(round(Freq, 1), 30, 300)
        holoColor(11, (Freq > 99.9) ? SegmentOn : SegmentOff)
        local D1 = toString(floor(Freq/100)), local D2 = toString(floor((Freq%100)/10)), local D3 = toString(floor(Freq%10)), local D4 = toString(round((Freq%1)*10))
        holoModel(11, "models/sprops/misc/alphanum/alphanum_" + D1 + ".mdl")
        holoModel(12, "models/sprops/misc/alphanum/alphanum_" + D2 + ".mdl")
        holoModel(13, "models/sprops/misc/alphanum/alphanum_" + D3 + ".mdl")
        holoModel(14, "models/sprops/misc/alphanum/alphanum_" + D4 + ".mdl")
        holoPos(11, entity():toWorld(vec(0, 12.2, 0) + DigitsPos + ((D1 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        holoPos(12, entity():toWorld(vec(-2, 12.2, 0) + DigitsPos + ((D2 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        holoPos(13, entity():toWorld(vec(-4, 12.2, 0) + DigitsPos + ((D3 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        holoPos(14, entity():toWorld(vec(-6.5, 12.2, 0) + DigitsPos + ((D4 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        printColor(vec(255, 150, 0), "[VHF]", vec(255), " - Set TX frequency to " + Freq + " MHz")
        local Ang = -(Freq - 30) # 0 - 270
        holoAng(39, entity():toWorld(ang(Ang, 0, 90)))
        return Freq
    }
    function number setRXFrequency(Freq){
        if(Freq < 30 | Freq > 300){
            printColor(vec(255, 150, 0)," [VHF]", vec(255), " - Frequency is out of range!")
            return RXFrequency
        }
        Freq = clamp(round(Freq, 1), 30, 300)
        holoColor(21, (Freq > 99.9) ? SegmentOn : SegmentOff)
        local D1 = toString(floor(Freq/100)), local D2 = toString(floor((Freq%100)/10)), local D3 = toString(floor(Freq%10)), local D4 = toString(round((Freq%1)*10))
        holoModel(21, "models/sprops/misc/alphanum/alphanum_" + D1 + ".mdl")
        holoModel(22, "models/sprops/misc/alphanum/alphanum_" + D2 + ".mdl")
        holoModel(23, "models/sprops/misc/alphanum/alphanum_" + D3 + ".mdl")
        holoModel(24, "models/sprops/misc/alphanum/alphanum_" + D4 + ".mdl")
        holoPos(21, entity():toWorld(vec(0, 12.2, 4) + DigitsPos + ((D1 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        holoPos(22, entity():toWorld(vec(-2, 12.2, 4) + DigitsPos + ((D2 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        holoPos(23, entity():toWorld(vec(-4, 12.2, 4) + DigitsPos + ((D3 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        holoPos(24, entity():toWorld(vec(-6.5, 12.2, 4) + DigitsPos + ((D4 == "1") ? vec(-0.75, 0, 0) : vec(0))))
        printColor(vec(255, 150, 0), "[VHF]", vec(255), " - Set RX frequency to " + Freq + " MHz")
        local Ang = -(Freq - 30) # 0 - 270
        holoAng(37, entity():toWorld(ang(Ang, 0, 90)))
        return Freq
    }
    
    function void setTXIndicator(On){
        holoColor(28, On ? SegmentOn : SegmentOff)
    }
    function void setRXIndicator(On){
        holoColor(31, On ? SegmentOn : SegmentOff)
    }
    
    TXFrequency = 30.0
    RXFrequency = 30.0
    setRXFrequency(30)
    setTXFrequency(30)
    
    dsSetScope(2)
    dsJoinGroup("VHF")
    
    runOnChat(1)
    
}else{
    
    if(chatClk(owner())){
        local Args = owner():lastSaid():explode(" ")
        if(Args[1, string] == "/tx"){
            TXFrequency = setTXFrequency(Args[2, string]:toNumber())
            hideChat(1)
        }
        if(Args[1, string] == "/rx"){
            RXFrequency = setRXFrequency(Args[2, string]:toNumber())
            hideChat(1)
        }
        if(Args[1, string] == "/send"){
            hideChat(1)
            local Data = table()
            Args:shift()
            Data["Text", string] = Args:concat(" ")
            Data["Sender", entity] = owner()
            local Encrypted = vonEncode(Data)
            dsSend(toString(TXFrequency), "VHF", Encrypted)
            setTXIndicator(1)
            timer("stoptx", Args:concat(" "):length() * 125)
            printColor(vec(255, 150, 0), "[VHF]", vec(75,0,130), " You", vec(255), ": " + Args:concat(" "))
            soundStop(1)
            entity():soundPlay(1, 0.5, "ambient/energy/spark5.wav")
            soundPitch(1, 255)
        }
    }
    
    if(dsClk(toString(RXFrequency))){
        local Data = vonDecodeTable(dsGetString())
        printColor(vec(255, 150, 0), "[VHF]", vec(255), " - ", teamColor(Data["Sender", entity]:team()), Data["Sender", entity]:name(), vec(255), ": " + Data["Text", string])
        setRXIndicator(1)
        soundStop(2)
        timer("stoprx", Data["Text", string]:length() * 125)
        entity():soundPlay(2, 0, "ambient/nature/waterfall_mediumloop05.wav")
        soundVolume(2, 0.75)
        soundPitch(2, 255)
    }
    
    if(clk("stoptx")){
        setTXIndicator(0)
        entity():soundPlay(1, 0.5, "ambient/energy/spark5.wav")
        soundPitch(1, 255)
    }
    if(clk("stoprx")){
        setRXIndicator(0)
        soundStop(2)
        entity():soundPlay(2, 0.5, "ambient/energy/spark5.wav")
        soundPitch(2, 255)
    }
    
}

